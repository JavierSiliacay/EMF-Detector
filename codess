/*
  ------------------------------------------------------------------------------
  Â© 2025 Javier Siliacay | USTP Autotronics - All Rights Reserved.

  This source code is the intellectual property of the author and is provided 
  for educational and non-commercial use only. Unauthorized copying, modification, 
  distribution, or use of this code for commercial purposes is strictly prohibited 
  without prior written consent from the author.

  Violation of these terms may result in legal action under applicable intellectual 
  property laws.

  For permissions, contact: github.com/javiersiliacay
  ------------------------------------------------------------------------------
*/

#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <math.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

#define EMF_PIN A2

#define LED_LOW 2      // Green LED
#define LED_MEDIUM 3   // Yellow LED
#define LED_HIGH 4     // Red LED
#define BUZZER 5

float wavePhase = 0;

void setup() {
  Serial.begin(9600);

  pinMode(LED_LOW, OUTPUT);
  pinMode(LED_MEDIUM, OUTPUT);
  pinMode(LED_HIGH, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    while (true);
  }

  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 0);
  display.println("EMF Detector Ready");
  display.display();
  delay(2000);
}

void loop() {
  int emfLevel = analogRead(EMF_PIN);
  emfLevel = constrain(emfLevel, 0, 1023);

  Serial.print("EMF Level: ");
  Serial.println(emfLevel);

  // Wave settings
  float waveSpeed = 0.0;
  float amplitude = 0.0;

  // LED + buzzer + wave logic
  if (emfLevel <= 300) {
    digitalWrite(LED_LOW, HIGH);
    digitalWrite(LED_MEDIUM, LOW);
    digitalWrite(LED_HIGH, LOW);
    tone(BUZZER, 500, 100);
    amplitude = 5;
    waveSpeed = 0.05;
  } else if (emfLevel <= 600) {
    digitalWrite(LED_LOW, LOW);
    digitalWrite(LED_MEDIUM, HIGH);
    digitalWrite(LED_HIGH, LOW);
    tone(BUZZER, 1000, 100);
    amplitude = 10;
    waveSpeed = 0.15;
  } else {
    digitalWrite(LED_LOW, LOW);
    digitalWrite(LED_MEDIUM, LOW);
    digitalWrite(LED_HIGH, HIGH);
    tone(BUZZER, 4000, 100);
    amplitude = 15;
    waveSpeed = 0.3;
  }

  // Animate wave
  wavePhase += waveSpeed;

  display.clearDisplay();

  // EMF label
  display.setCursor(0, 0);
  display.print("EMF Level: ");
  display.print(emfLevel);

  // Draw moving wave
  for (int x = 0; x < SCREEN_WIDTH; x++) {
    float y = 40 + amplitude * sin((x * 0.2) + wavePhase);
    display.drawPixel(x, (int)y, WHITE);
  }

  display.display();
  delay(30);
}
